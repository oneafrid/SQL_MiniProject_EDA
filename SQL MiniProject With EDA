/* Q1: Some of the facilities charge a fee to members, but some do not.
Please list the names of the facilities that do. */

SELECT name, membercost
FROM Facilities
WHERE membercost != 0

/* Q2: How many facilities do not charge a fee to members? */

SELECT COUNT( name ) AS  "Number Of Facilities"
FROM Facilities
WHERE membercost =0

/* Q3: How can you produce a list of facilities that charge a fee to members,
where the fee is less than 20% of the facility's monthly maintenance cost?
Return the facid, facility name, member cost, and monthly maintenance of the
facilities in question. */

SELECT facid, name, membercost, monthlymaintenance
FROM Facilities
WHERE membercost < ( 0.2 * monthlymaintenance ) 

/* Q4: How can you retrieve the details of facilities with ID 1 and 5?
Write the query without using the OR operator. */

SELECT * 
FROM Facilities
WHERE facid =1
UNION 
SELECT * 
FROM Facilities
WHERE facid =5
ORDER BY facid

/* Q5: How can you produce a list of facilities, with each labelled as
'cheap' or 'expensive', depending on if their monthly maintenance cost is
more than $100? Return the name and monthly maintenance of the facilities
in question. */

SELECT name, monthlymaintenance, 
CASE WHEN monthlymaintenance >=100
THEN  "Expensive"
ELSE  "Cheap"
END AS  "Type Of Facilities"
FROM Facilities

/* Q6: You'd like to get the first and last name of the last member(s)
who signed up. Do not use the LIMIT clause for your solution. */

SELECT CONCAT( firstname,  " ", surname ) AS  "Newly Signed Up Member", joindate
FROM Members
WHERE memid = ( 
SELECT MAX( memid ) 
FROM Members )

/* Q7: How can you produce a list of all members who have used a tennis court?
Include in your output the name of the court, and the name of the member
formatted as a single column. Ensure no duplicate data, and order by
the member name. */

SELECT name, CONCAT( firstname,  ' ', surname ) AS  'Member'
FROM Facilities
JOIN Bookings ON Facilities.facid = Bookings.facid
JOIN Members ON Members.memid = Bookings.memid
WHERE name LIKE  'Tennis Court%'
GROUP BY 2 
ORDER BY 2

/* Q8: How can you produce a list of bookings on the day of 2012-09-14 which
will cost the member (or guest) more than $30? Remember that guests have
different costs to members (the listed costs are per half-hour 'slot'), and
the guest user's ID is always 0. Include in your output the name of the
facility, the name of the member formatted as a single column, and the cost.
Order by descending cost, and do not use any subqueries. */

SELECT starttime, name, CONCAT( firstname,  ' ', surname ) AS  'Member', guestcost
FROM Bookings
JOIN Facilities ON Bookings.facid = Facilities.facid
JOIN Members ON Members.memid = Bookings.memid
WHERE CAST( starttime AS DATE ) =  "2012-09-14"
AND guestcost >=30
GROUP BY 3 
ORDER BY 4

/* Q9: This time, produce the same result as in Q8, but using a subquery. */

SELECT starttime, name, CONCAT( firstname,  ' ', surname ) AS  'Member', guestcost
FROM Bookings
JOIN Facilities ON Bookings.facid = Facilities.facid
JOIN Members ON Members.memid = Bookings.memid
WHERE starttime
IN (

SELECT starttime
FROM Bookings
WHERE CAST( starttime AS DATE ) =  "2012-09-14"
)
AND guestcost >=30
GROUP BY 3 
ORDER BY 4

/* Q10: Produce a list of facilities with a total revenue less than 1000.
The output of facility name and total revenue, sorted by revenue. Remember
that there's a different cost for guests and members! */

SELECT name, (
monthlymaintenance - ( guestcost + membercost )
) AS  "Total Revenue"
FROM Facilities
WHERE (
monthlymaintenance - ( guestcost + membercost )
) <1000
ORDER BY 2